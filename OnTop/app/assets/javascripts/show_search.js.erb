// globals
// canvas handle
var disp;
var textbox;
var dispdiv;

// initialization
$(document).ready(function () {

    /*net = null;
    textbox = document.getElementById("keyword");

    
    alert("<%= search_fetch_key_path %>");

    // default load for the page
//    $.get("search#fetch_key", {keyword: textbox.value}, refresh(data), "json");

    alert("check2");
*/

    // construct a static json data set
    var testset = {nodes: [{keyword: "node1"}, {keyword: "node2"}, {keyword: "node3"}],
                   edges: [
                       {keyword1: "node1", metric: 0.5, keyword2: "node2"},
                       {keyword1: "node1", metric: 0.5, keyword2: "node3"},
                       {keyword1: "node2", metric: 0.3, keyword2: "node3"}
                   ]
                  };

    dispdiv = document.getElementById("displaydiv");
    disp = document.getElementById("display");
    disp.width = dispdiv.clientWidth;
    disp.height = dispdiv.clientHeight;
    var g = graph("display", testset, config);

     /*
    // handler function for refreshing the page
    $("#submit").click(function () {

        $.get("search#fetch_by_keyword", {keyword: textbox.value}, 
              refresh(data), "json");
        
    alert("check2");
*/
});

// refresh keywords and redraw graph
// callback function for our AJAX calls
function refresh(data) {

    // build a new graph for the data
    g = graph(data);
    g.nodesLayer.draw();
    
    //g.solve();

}

/*
// draw the graph g centered on canvas c
function render(c, g) 
{
    // open a 2D context to the canvas to reuse
    var ctx;
    // draw links first
    for (node in g.nodes) 
    {

        for (other in node.edges)
        {
            renderLink(c, node.x, node.y, other.x, other.y);
        }

    }

    // draw nodes and keywords
    for (node in g.nodes) 
    {

        renderNode(c, x, y);
        renderKeyword(c, x, y, node.keyword)

    }

}

function renderNode(c, x, y) 
{
    // get context
    var ctx = c.getContext("2d");

    ctx.beginPath();
    ctx.arc(x, y, 50, 0, 2*Math.PI);
    ctx.fillStyle="rgb(200, 200, 255)";
    ctx.strokeStyle="rgb(0, 0, 255)";
    ctx.fill();
    ctx.stroke();

}

function renderLink(c, x1, y1, x2, y2) 
{
    // get context
    var ctx = c.getContext("2d");
    ctx.beginPath();
    ctx.moveTo(x1, y1);
    ctx.lineTo(x2, y2);
    ctx.strokeStyle = "rgb(0, 0, 255)";
    ctx.stroke();

}

// draw a black keyword centered at x, y
function renderKeyword(c, x, y, str)
{

    // get context
    var ctx = c.getContext("2d");

    ctx.font="20px Helvetica";
    var size = ctx.measureText(str);
    
    ctx.fillText(str, x - size.width/2, y + 10);

}

*/