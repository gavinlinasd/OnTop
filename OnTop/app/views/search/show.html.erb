<% content_for :script do %>
<%= javascript_include_tag "forcegraph", :debug =>true %>
<%= javascript_include_tag "kinetic-v4.0.5.min.js", :debug =>true %>

<% end %>

<script>


// globals
// configuration for our graph object
// set constants here
var config = new Object();
config.node = new Object();
config.node.fill = new Object();
config.node.fill.color = new Object();
config.node.fill.color.fresh = "lightskyblue";
config.node.fill.color.visited = "tomato";
config.node.radius = 30;
config.node.stroke = new Object();
config.node.stroke.color = new Object();
config.node.stroke.width = 4;
config.node.stroke.color.fresh = "royalblue";
config.node.stroke.color.visited = "red";

config.link = new Object();
config.link.visited = "red";
config.link.fresh = "royalblue";
config.link.width = 4;

// graph handle
var g;
// stage handle
var stage;
// animation handle
var anim;
// canvas handle
var display;

var visited = new Array();

// initialization
$(document).ready(function () {

    display = document.getElementById("display");
    
    stage = new Kinetic.Stage({
        container: "display",
        width: display.clientWidth,
        height: display.clientHeight
    });

	// Javascript to make AJAX request

	var form_name = "#search_box_form";

	$(form_name).submit(function(e) {
		// Cancel default form submission action
		e.preventDefault();

		var dataString = $(form_name).serialize();
		// create ajax request
		$.ajax({
			
			url: "<%= search_fetch_graph_path %>",
			data: dataString,
			dataType: "json",
			success: function(data) {
				// can added anything that's necessary
				refresh(data, stage);
				}
				
		});


	});

});

// refresh keywords and redraw graph
// callback function for our AJAX calls
function refresh(data, s) {

    s.removeChildren();
    g = new graph(s, data, config);
    // fix the center node
    g.fixNode(data.nodes[0].keyword, stage.getWidth()/2, stage.getHeight()/2);
    g.visitNode(data.nodes[0].keyword);

    // start a new animation to handle graph drawing
    anim = new Kinetic.Animation({
        func: function(frame) {
            var energy = g.step(frame.timeDiff/1000);
        },
        node: s
    });

    anim.start();
    
}

</script>


<%# render 'searchbox' %>

<div id="main">
  <h1 id="head">OnTop Search Engine</h1>

  <div id="display"></div>

  <div id="search_box" class="center">
    <form id="search_box_form">
	  <input type="text" id="keyword" name="keyword"/>
	  <input type="submit" value="Search"/>
    </form>
  </div>

  <div id="footer" >

    <div id="leftinfo"></div>
  </div>
</div>


